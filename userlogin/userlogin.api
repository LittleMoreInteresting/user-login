syntax = "v1"

import "api/pager.api"
type (
	RegisterRequest {
		Name     string `json:"name"`
		Email    string `json:"email"`
		Password string `json:"password"`
	}

	RegisterResponse {
		ID    int    `json:"id"`
		Name  string `json:"name"`
		Email string `json:"email"`
	}

	LoginRequest {
		Email    string `json:"email"`
		Password string `json:"password"`
	}

	LoginResponse {
		Token  string `json:"token"`
		Expire int64  `json:"expire"`
	}

	UserInfoResponse {
		ID    int64  `json:"id"`
		Name  string `json:"name"`
		Email string `json:"email"`
	}

	TagResponse {
		Id    int64  `json:"id"`
		Name  string `json:"name"`
		State int64  `json:"state,default=1"`
	}

	TagListRequest {
		Name string `json:"name,optional"`
		Pager
	}
	TagListResponse {
		List     []TagResponse `json:"list"`
		Matedata Pager         `json:"matedata"`
	}
)

service userlogin-api {
	@handler RegisterHandler
	post /api/register(RegisterRequest) returns (RegisterResponse);
	
	@handler LoginHandler
	post /api/login(LoginRequest) returns (LoginResponse);
}

@server(
	jwt: Auth
)
service userlogin-api {
	@handler UserInfo
	get /api/userinfo returns (UserInfoResponse)
}

@server(
	middleware : Tagging,Version
)
service userlogin-api {
	@handler Tags
	get /api/tag/list(TagListRequest) returns (TagListResponse)
}